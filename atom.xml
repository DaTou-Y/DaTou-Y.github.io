<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-28T01:07:17.697Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>daTou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com//posts/4a17b156.html/"/>
    <id>http://yoursite.com//posts/4a17b156.html/</id>
    <published>2019-05-27T23:50:24.492Z</published>
    <updated>2019-05-28T01:07:17.697Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>chrome开发者工具实用小技巧</title>
    <link href="http://yoursite.com//posts/d7262aae.html/"/>
    <id>http://yoursite.com//posts/d7262aae.html/</id>
    <published>2017-03-30T10:20:21.000Z</published>
    <updated>2019-05-28T00:57:43.282Z</updated>
    
    <content type="html"><![CDATA[<p><code>chrome</code> 浏览器是每个前端开发者最常用的浏览器，因为界面简洁友好，开发者工具功能强大且简单易用，大大提升了开发效率。所以很有必要了解 <code>chrome</code> 开发者工具都有哪些很常用或实用的功能。<br>写这篇文章的时候，chrome的版本如下：</p><p><img src="../../../../images/201703/chrome_01.png" alt="chrome版本"></p><a id="more"></a><h2 id="Elements面板篇"><a href="#Elements面板篇" class="headerlink" title="Elements面板篇"></a>Elements面板篇</h2><ul><li><p>在 <code>Elements</code> 面板中，使用 <code>Ctrl + F</code> 打开搜索输入框，可以输入常规字符串或选择器来选择 <code>HTML</code> 元素。</p><p>  <img src="../../../../images/201703/chrome_02.png" alt="ctrl+f"></p></li><li><p>在元素前面的小黑三角上用 <code>Alt +</code> 鼠标左键即可展开收起当前元素下的所有子元素。</p><p>  <img src="../../../../images/201703/chrome_03.png" alt="alt+left"></p></li><li><p>css数值使用快捷键调整：</p><ul><li><code>Up / Down</code>：增加减少1</li><li><code>Ctrl + Up / Ctrl + Down</code>：增加减少100</li><li><code>Shift + Up / Shift + Down</code>：增加减少10</li><li><code>Alt + Up / Alt + Down</code>： 增加减少0.1</li><li><p><code>Up / Down</code> 等同于鼠标滚轮</p><p><img src="../../../../images/201703/chrome_04.png" alt="css-number-value"></p></li></ul></li><li><p>查看事件监听器。选中一个元素，然后点击 <code>Event Listeners</code> 面板，可以看到当前元素绑定的所有事件。然后找到任一事件类型下的 <code>handler</code>，右键单击选择 <code>Show function definition</code> 即可在 <code>Source</code> 面板中打开且定位到当前事件的处理函数的所在位置。</p><p>  <img src="../../../../images/201703/chrome_05.png" alt="event-listeners"></p></li><li><p>点击颜色方格会打开 <code>chrome</code> 的调色板。如下图第1块是着色和阴影选择器。第2块像笔那个按钮( <code>toggle color picker</code> )是取色器，蓝色的时候表示激活状态，就可以在页面任何一处进行取色；右边绿色圆形的是当前的颜色值，点击会将当前颜色值的代码复制到剪贴板；再右边的两块条分别表示色调选择器和不透明度选择器。第3块是表示当前颜色的显示模式，后边的按钮可以切换显示模式。第4块，<code>Color Palettes</code> 里分3小块，分别是：<code>Material Design</code>，一组符合 <code>Material Design</code> 规范的颜色；<code>Page Colors</code>，一组从页面的 <code>CSS</code> 自动生成的颜色；<code>Custom</code>，自定义颜色。第5块颜色面板，长按颜色块可以弹出10个当前颜色由浅至深的小色块，这个功能对于精确定制网页主题颜色非常有帮助。第6块是自定义颜色，这里可以添加删除自定义颜色，并且会永久保存在 <code>chrome</code> 的 <code>DevTools</code> 里，不会因为刷新或关闭浏览器而消失。第7块是生成了一些和页面相关的颜色值。</p><p>  <img src="../../../../images/201703/chrome_06.png" alt="color-palette"></p></li><li><p>可视化 <code>Shadow DOM</code>。在 <code>dom</code> 元素列表中，都是我们写的看得见的元素。其实在构建 <code>dom</code> 的时候，也存在一部分东西是我们没写的，但是实际存在而被浏览器隐藏起来的元素。如果想看到这些元素就可以通过勾选 <code>Settings</code> -&gt; <code>Preferences</code> -&gt; <code>Elements</code> 下的 <code>Show user agent shadow DOM</code> 来显示这样构建的元素。这样一来就可以很好的这些元素的样式了。</p><p>  <img src="../../../../images/201703/chrome_07.png" alt="shadow-dom"></p></li><li><p>给元素添加状态。元素有4种用户行为状态：:<code>active</code>、<code>:hover</code>、<code>:focus</code>、<code>:visited</code>。可以通过2中方式主动触发用户行为。选中一个元素，然后右键点击选中一个状态即可，如果有设置对于的样式，就可以看到区别。另外一种方式是在 <code>Styles</code>面板中进行设置。</p><p>  <img src="../../../../images/201703/chrome_08.png" alt="ele-state"></p></li><li><p>使用 <code>Tab</code> 键可以在 <code>CSS</code> 样式规则中进行遍历选定，选定的目标包括：选择器、属性和属性值。如果想跳回上一个目标，使用 <code>Shift + Tab</code>。但是再使用快捷键切换选定之前需要先让光标在 <code>Styles</code> 面板，处于输入状态即可。</p></li></ul><h2 id="Console面板篇"><a href="#Console面板篇" class="headerlink" title="Console面板篇"></a>Console面板篇</h2><ul><li><p>使用 <code>$0-$4</code> 选择元素。<code>$0</code> 返回最后一次选择的元素，<code>$1</code> 返回仅在最后一次之前选择的元素，以此类推。<code>$(selector)</code> 返回带有指定 <code>CSS</code> 选择器的第一个DOM元素的引用。<code>$$(selector)</code> 返回 <code>CSS</code> 选择所有匹配的元素数组。</p><p>  <img src="../../../../images/201703/chrome_09.png" alt="$_selector"></p>  <div class="tip"><br>      如果页面使用了类 <code>Jquery</code> 库，则 <code>$(selector)</code> 功能将被覆盖， <code>$</code> 将与该库的实现对应。<br>  </div></li><li><p>一些实用的方法:</p><ul><li><code>console.log()</code>、<code>console.info()</code>、<code>console.warn()</code>、<code>console.error()</code>打印不同的状态信息</li><li><p>使用CSS设置控制台输出样式，利用CSS格式说明符%c。</p><p>  <img src="../../../../images/201703/chrome_17.png" alt="css-format"></p></li><li><p><code>copy(object)</code>，将指定对象的字符串表示复制到剪贴板。</p></li><li><p><code>getEventListeners(object)</code>，返回一个在指定元素上绑定的所有事件监听器的数组。但是这里看不了事件的处理函数，也没有像 <code>Event Listeners</code> 面板那边 <code>show function definition</code> 那样的功能。</p><p>  <img src="../../../../images/201703/chrome_13.png" alt="ctrl+p"></p></li><li><p><code>inspect(elem)</code>， 跳转到 <code>Elements</code> 面板的指定元素节点</p></li></ul></li><li><p><code>console.time(str)</code> 和 <code>console.timeEnd(str)</code> 返回这中间间隔的时间。下图的 <code>4.24e+3ms</code> 是数字的科学计数法表示，表示的实际值是：<code>4.24*10*10*10ms</code>，即4.24秒。</p><p>  <img src="../../../../images/201703/chrome_12.png" alt="console.time"></p></li></ul><h2 id="Sources面板篇"><a href="#Sources面板篇" class="headerlink" title="Sources面板篇"></a>Sources面板篇</h2><ul><li><p><code>Ctrl + Shift + F</code>，根据文件内容查找所有站内资源文件，返回找出匹配的文件内容。这个功能很好用。比如我在别人的站点看到一个效果，但是不知道写到哪个文件里了，这个时候我就可以根据关键的 <code>className</code> 或者 <code>id</code> 把这个文件找出来。</p></li><li><p><code>Ctrl + P</code>，根据文件名查找所有站内资源文件。</p><p>  <img src="../../../../images/201703/chrome_11.png" alt="ctrl+p"></p></li><li><p>漂亮打印。对于 <code>Sources</code> 里的资源文件，可以将杂乱的或是压缩过的内容按照一定的缩进和换行规则进行打印输出。</p><p>  <img src="../../../../images/201703/chrome_14.png" alt="pretty-print"></p></li><li><p>在 <code>Sources</code> 面板中找到图片资源，然后在图片上右键即可获取图片的 <code>Data URI</code>。</p><p>  <img src="../../../../images/201703/chrome_15.png" alt="data-uri"></p></li><li><p>使用 <code>console.dir( ele )</code> 将 <code>DOM</code> 元素格式化为 <code>JavaScript</code> 对象</p><p>  <img src="../../../../images/201703/chrome_18.png" alt="console.dir"></p></li><li><p>在 <code>Sources</code> 面板编辑文件小技巧</p><ul><li>使用 <code>Ctrl + p</code> 打开输入框输入 <code>:20:30</code> 回车后，光标位置将跳转到当前文件的第20行第30列</li><li>使用使用 <code>Alt + -</code> 和 <code>Alt + =</code> 可以在上一个鼠标位置和下一个鼠标位置之间跳转</li><li>使用 <code>Ctrl +</code> 鼠标左键可以添加多个光标输入位置</li><li><p>使用 <code>Alt +</code> 鼠标拖动可以拉出一块矩形选区</p><p>  <img src="../../../../images/201703/chrome_16.png" alt="alt-move"></p></li></ul></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">chrome-devtools</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;chrome&lt;/code&gt; 浏览器是每个前端开发者最常用的浏览器，因为界面简洁友好，开发者工具功能强大且简单易用，大大提升了开发效率。所以很有必要了解 &lt;code&gt;chrome&lt;/code&gt; 开发者工具都有哪些很常用或实用的功能。&lt;br&gt;写这篇文章的时候，chrome的版本如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../../../../images/201703/chrome_01.png&quot; alt=&quot;chrome版本&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="web综合" scheme="http://yoursite.com/categories/web%E7%BB%BC%E5%90%88/"/>
    
    
      <category term="chrome" scheme="http://yoursite.com/tags/chrome/"/>
    
  </entry>
  
</feed>
